#-----------------------------------------------------------------------------#
#                                  MAKEFILE                                   #
#-----------------------------------------------------------------------------#
#--- Project    : <project title>                                             #
#--- Author     : Kelve T. Henrique                                           #
#--- Last update: 2019 Apr 04
#-----------------------------------------------------------------------------#
#--- Dependencies:                                                            #
#            * arm-none-eabi Toolchain                                        #
#            *                                                                #
#-----------------------------------------------------------------------------#

#-----------------------------------------------------------------------------#
#                                  USAGE                                      #
#-----------------------------------------------------------------------------#
#          make           .... build the program image                        #
#          make debug     .... build the program image and invoke gdb         #
#          make flash     .... build an flash the application                 #
#          make erase     .... erase the target device                        #
#          make doc       .... run doxygen - output will be in > doc          #
#          make clean     .... remove intermediate and generated files        #
#-----------------------------------------------------------------------------#

#-----------------------------------------------------------------------------#
#                               DIRECTORIES                                   #
#-----------------------------------------------------------------------------#
BIN           = ./bin
SRC           = ./src
INC           = ./inc
DOC           = ./doc
SYS           = ./sys

#-----------------------------------------------------------------------------#
#                                    TOOLS                                    #
#-----------------------------------------------------------------------------#
TERMINAL    = konsole
CC          = arm-none-eabi
AS          = $(CC)-as
CC          = $(CC)-gcc
CP          = $(CC)-objcopy
OD          = $(CC)-objdump
GDB         = $(CC)-gdb
SIZE        = $(CC)-size
DO          = doxygen

#-----------------------------------------------------------------------------#
#                                  LIBS                                       #
#-----------------------------------------------------------------------------#
LIBS         += -lm

#-----------------------------------------------------------------------------#
#                             SOURCE FILES                                    #
#-----------------------------------------------------------------------------#
SRC_FILES     = $(wildcard $(SRC)/*.c)

#-----------------------------------------------------------------------------#
#                           DIRECTORIES TO INCLUDE                            #
#-----------------------------------------------------------------------------#
INC_DIR       = -I$(INC)

#-----------------------------------------------------------------------------#
#                           LIBRARIES TO INCLUDE                              #
#-----------------------------------------------------------------------------#
LIBS_DIR      = -L$(SYS)

#-----------------------------------------------------------------------------#
#                                 OBJECT FILES                                #
#-----------------------------------------------------------------------------#
OBJS = $(SRC_FILES:.c=.o)

#-----------------------------------------------------------------------------#
#                              COMPILER OPTIONS                               #
#-----------------------------------------------------------------------------#
CPU       = cortex-m4
FPU       = fpv4-sp-d16

CFLAGS   += -mcpu=$(CPU) 
CFLAGS   += -mthumb 

CFLAGS   += -Wall # all warning about questionable constructions
CFLAGS   += -Wextra # extra warnings not included by -Wall
CFLAGS   += -Wpedantic
CFLAGS   += -Wshadow
CFLAGS   += -Wmissing-prototypes
CFLAGS   += -Wstrict-prototypes
CFLAGS   += -fsanitize=undefined
CFLAGS   += -ffunction-sections -fdata-sections -fsigned-char -fstack-usage

#-----------------------------------------------------------------------------#
#                             LINKER OPTIONS                                  #
#-----------------------------------------------------------------------------#
LFLAGS = -nostartfiles $(LIBS_DIR) -Wl,--gc-sections -Wl,-Map=bin/$(TARGET).map

#------------------------------------------------------------------------------#
#                              BUILD RULES                                     #
#------------------------------------------------------------------------------#
all: $(OBJS)
.PHONY: all

%.o: %.c
	@echo "COMPILING $@ ......................................................"
	@echo ""
	$(CC) -c $(CFLAGS) $(INC_DIR) $< -o $(BIN)/$@
	@echo ""
	@echo "..................................................................."

%.o: %.asm
	@echo "ASSEMBLING $@ ......................................................"
	@echo ""
	$(CC) -c $(CFLAGS) $(INC_DIR) $< -o $(BIN)/$@
	@echo ""
	@echo "..................................................................."

$(TARGET): $(OBJS)
	@echo "LINKING $(TARGET) ................................................."
	@echo ""
	$(CC) $(CFLAGS) $(INC_DIR) $(OBJS) -o $(BIN)/$@
	@echo ""
	@echo "..................................................................."

.PHONY: doc
doc: $(DOC)/Doxyfile
	@echo "GENERATING DOCUMENTATION .........................................."
	@echo ""
	$(DO) $(DOC)/Doxyfile
	@echo ""
	@echo "..................................................................."

#------------------------------------------------------------------------------#
#                             DEBUG RULES                                      #
#------------------------------------------------------------------------------#
.PHONY: debug
debug: $(BIN)/
ifdef SystemRoot
	@call start JLinkGDBServer -Device XMC4500-1024 -if SWD
else
	$(TERMINAL) -e "JLinkGDBServer -Device XMC4500-1024 -if SWD" &
	sleep 1 && $(TERMINAL) -e "telnet localhost 2333" &
endif
	$(GDB) -q $(BIN)/$(TARGET).elf $(GDB_ARGS)



#------------------------------------------------------------------------------#
#                             CLEAN RULES                                      #
#------------------------------------------------------------------------------#
.PHONY: clean
clean:
	@echo "CLEANING DIRECTORIES .............................................."
	@echo ""
	rm -rf $(BIN)/       > /dev/null 2>&1 || true
	rm -rf $(DOC)/html   > /dev/null 2>&1 || true
	rm -rf $(DOC)/latex  > /dev/null 2>&1 || true
	@echo ""
	@echo "..................................................................."

